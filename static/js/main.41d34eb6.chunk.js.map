{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","console","log","state","axios","post","then","response","age","salary","hobby","this","Container","fluid","className","Header","as","Form","onSubmit","Field","placeholder","type","onChange","Button","color","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAKqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,cAAgB,SAACC,GACf,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAZzB,EAenBC,cAAgB,SAAAL,GACdA,EAAEM,iBACFC,QAAQC,IAAI,EAAKC,OAEjBC,IAAMC,KAAK,qEAAsE,EAAKF,OACrFG,MAAK,SAAAC,GACJN,QAAQC,IAAIK,OAlBd,EAAKJ,MAAQ,CACXN,KAAM,GACNW,IAAK,GACLC,OAAQ,GACRC,MAAO,IAPQ,E,0CAyBnB,WAAU,IAAD,EAC8BC,KAAKR,MAAlCN,EADD,EACCA,KAAMW,EADP,EACOA,IAAKC,EADZ,EACYA,OAAQC,EADpB,EACoBA,MAC3B,OACE,eAACE,EAAA,EAAD,CAAWC,OAAK,EAACC,UAAU,YAA3B,UACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAX,kCACA,eAACC,EAAA,EAAD,CAAMH,UAAU,OAAOI,SAAUP,KAAKZ,cAAtC,UACE,eAACkB,EAAA,EAAKE,MAAN,WACE,yCACA,uBACEC,YAAY,kBACZC,KAAK,OACLxB,KAAK,OACLC,MAAOD,EACPyB,SAAUX,KAAKlB,mBAGnB,eAACwB,EAAA,EAAKE,MAAN,WACE,wCACA,uBACEC,YAAY,iBACZC,KAAK,SACLxB,KAAK,MACLC,MAAOU,EACPc,SAAUX,KAAKlB,mBAGnB,eAACwB,EAAA,EAAKE,MAAN,WACE,2CACA,uBACEC,YAAY,oBACZC,KAAK,SACLxB,KAAK,SACLC,MAAOW,EACPa,SAAUX,KAAKlB,mBAGnB,eAACwB,EAAA,EAAKE,MAAN,WACE,0CACA,uBACEC,YAAY,mBACZC,KAAK,OACLxB,KAAK,QACLC,MAAOY,EACPY,SAAUX,KAAKlB,mBAInB,cAAC8B,EAAA,EAAD,CAAQC,MAAM,OAAOH,KAAK,SAA1B,8B,GAzEuBI,aCOlBC,G,OAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.41d34eb6.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Button, Form, Container, Header } from \"semantic-ui-react\";\nimport \"./App.css\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      age: \"\",\n      salary: \"\",\n      hobby: \"\",\n    };\n  }\n\n  changeHandler = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    console.log(this.state);\n\n    axios.post('https://sheet.best/api/sheets/16de254e-3eb3-41c8-91b1-c3b7bfc009f8', this.state)\n    .then(response => {\n      console.log(response);\n    })\n  }\n\n  render() {\n    const { name, age, salary, hobby } = this.state;\n    return (\n      <Container fluid className=\"container\">\n        <Header as=\"h2\">React Google Sheets!</Header>\n        <Form className=\"form\" onSubmit={this.submitHandler}>\n          <Form.Field>\n            <label>Name</label>\n            <input\n              placeholder=\"Enter your name\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.changeHandler}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Age</label>\n            <input\n              placeholder=\"Enter your age\"\n              type=\"number\"\n              name=\"age\"\n              value={age}\n              onChange={this.changeHandler}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Salary</label>\n            <input\n              placeholder=\"Enter your salary\"\n              type=\"number\"\n              name=\"salary\"\n              value={salary}\n              onChange={this.changeHandler}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Hobby</label>\n            <input\n              placeholder=\"Enter your hobby\"\n              type=\"text\"\n              name=\"hobby\"\n              value={hobby}\n              onChange={this.changeHandler}\n            />\n          </Form.Field>\n\n          <Button color=\"blue\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}